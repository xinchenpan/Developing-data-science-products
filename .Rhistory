saplle(1:10, add, 3)
add <- function(x, y) x + u
sapply(1:10, add, 3)
add <- function(x, y) x + y
sapply(1:10, add, 3)
?sapply
sapply(1:5, '+', 3)
sapply(1:5, +, 3)
sapply(1:5, "+", 3)
x <- list(1:3, 4:9, 10:12)
x
x[2]
x[[2]]
x[2][2]
x[2]
x[2][3]
x[4]
sapple(x, "[", 2)
sapply(x, "[", 2)
sapply(x, function(x), x[2])
sapply(x, function(x)  x[2])
sapply(x, "[", 2)
x
x[2]
x[1]
x[2]
x[[2]]
x
x
x[2]
f <- funcion(abcdef, bcde1, bcde2){
list(a = abcdef, b1 = bcde1, b2 = bcde2)
}
f <- funcion(abcdef, bcde1, bcde2){
list(a = abcdef, b1 = bcde1, b2 = bcde2)
}
f <- function(abcdef, bcde1, bcde2){
list(a = abcdef, b1 = bcde1, b2 = bcde2)
}
str(f(1, 2, 3))
str(f(2, 3, abcdef = 1))
str(f(2, 3, abcdef = 1))
str(f(2, 3, a = 1))
str(f(2, 3, a = 1))
str(f(2, 3, b = 1))
mean(1:10)
mean(1:10, trim = 0.05)
mean(x = 1:10)
mean(1:10, n = T)
?mean
mean(1:10, trim = 2)
mean(1:10, trim = 1-)
mean(1:10, trim = 10)
mean(1:10, trim = 0.2)
mean(1:10,, FALSE)
mean(, TRUE, x = c(1:10, NA))
args <- list(1:10, na.rm = TRUE)
args
do.call(mean, args)
mean(1:10, na.rm = TRUE)
f <- function(a = 1, b = 2){
c(a, b)
}
f()
g()
g <- function(a = 1, b = a * 2){
c(a, b)
}
g()
g(10)
g(10,20)
g(10,200)
h <- function(a = 1, b = d){
d <- (a + 1) ^ 2
c(a, b)
}
h()
h(10)
i <- function(a, b){
c(missing(a), missing(b)
}
i <- function(a, b){
c(missing(a), missing(b))
}
i()
i(a = 1)
i(b = 2)
i(1, 2)
f()
f <- function(x){
10
}
f()
f(stop("This is an error!"))
adders[[1]](10)
adders <- lapply(1:10, add)
add <- function(x){
function(y) x + y
}
adders <- lapply(1:10, add)
adders[[1]](10)
adders[[10]](10)
add <- function(x){
function(y) x + y
}
adders <- lapply(1:10, add)
adders[[1]](10)
adders[[10]](10)
f2 <- functin(x = z){}
f2 <- functin(x = z){
f2 <- function(x = z){}
f2 <- function(x = z){
z <- 100
x}
f2()
'%+%' <- function(a, b) paste(a, b, sep = "")
"new" %+% "string"
'%+%' <- function(a, b) paste(a, b, sep = "")
"new" %+% " string"
'%-%' <- function(a, b) paste(a, b, sep = "")
"new" %-% " string"
'-' <- function(a, b) paste(a, b, sep = "")
"new" - " string"
'% %' <- function(a, b) paste(a, b)
"a % % "b"
'% %' <- function(a, b) paste(a, b)
"a % % "b"
"
"a" % % "b"
'% %' <- function(a, b) paste(a, b)
"a" % % "b"
'second<-' <- function(x, value){
x[2] <- value
x
}
x <- 1:10
second(x) <- 5L
x
library(pryr)
install.packages("pryr")
library(pryr)
x <- 1:10
address(x)
x[2] <- 7L
address(x)
'modify<-' <- function(x, position, value){
x[position] <- value
x
}
modify<-(x, 1) <- 10
modify(x, 1) <- 10
x
f(5)
f <- function(x) {
if (x < 10){
0
} else{
10
}
f(5)
f <- function(x) {
if (x < 10){
0
} else{
10
}
}
f(5)
f(15)
?getMethod
?getClass
?getS3method
?showMethods
?getClass
?getS3method
?getS3method
?getMethod
?model.t
DDPQuiz3
install.packages("DDPQuiz3")
?colSums
?dgamma
library(DDPQuiz3)
?mean
?ColSums
?colSums
library(shiny)
runExample("02_text") # tables and data frames
runExample("03_reactivity") # a reactive expression
runExample("05_sliders") # slider bars
runExample("07_widgets") # help text and submit buttons
runExample("09_upload") # file upload wizard
runExample("10_download") # file download wizard
runExample("11_timer") # an automated timer
library(rsconnect)
deployApp()
setwd("C:/Users/Xinchen/Desktop/Developing Data Science products/Project")
deployApp()
library(shinyapps)
shinyapps::deployApp('https://nathanpan.shinyapps.io/Project')
shinyapps::deployApp('https://nathanpan.shinyapps.io/Project')
shinyapps::deployApp('C:\Users\Xinchen\Desktop\Developing Data Science products')
shinyapps::deployApp('C:/Users/Xinchen/Desktop/Developing Data Science products')
shinyapps::deployApp('C:/Users/Xinchen/Desktop/Developing Data Science products/projects')
shinyapps::deployApp('C:/Users/Xinchen/Desktop/Developing Data Science products/project')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp(display.mode = "showcase")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp(display.mode = "showcase")
runApp(display.mode = "showcase")
runApp(display.mode = "showcase")
runApp(display.mode = "showcase")
runApp(display.mode = "showcase")
shiny::runApp()
write.dcf(Title: Hello Shiny!
Author: RStudio, Inc.
AuthorUrl: http://www.rstudio.com/
License: GPL-3
DisplayMode: Showcase
Tags: getting-started
Type: Shiny, file = "C:\Users\Xinchen\Desktop\Developing Data Science products\Project\Description")
shiny::runApp()
runApp(display.mode = "showcase")
shiny::runApp()
